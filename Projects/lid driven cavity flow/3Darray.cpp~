#include <iostream>

int main(){

    
/*
    double ***x;

    // allocate memory
    x = new double** [3];                 // double**
    for(int i = 0; i < 3; i++){
        x[i] = new double* [10];           // double*
        for(int j = 0; j < 10; j++){
            x[i][j] = new double [10];       // double
        }
    }

    // use the array
    for(int j = 0; j < 10; j++)
{
	for(int k = 0; k < 10; k++){

		x[0][j][k] = 1.0;
		
		}
}
    for(int j = 0; j < 10; j++)
{
	for(int k = 0; k < 10; k++){

		x[1][j][k] = 4.0;
		
		}
}
    for(int j = 0; j < 10; j++)
{
	for(int k = 0; k < 10; k++){

		x[2][j][k] = 3.0;
		
		}
}
    //testing
    for(int i = 2; i < 3; i++)
		{
        for(int j = 0; j < 10; j++)
				{
            for(int k = 0; k < 10; k++)
				{						 
               std::cout << x[i][j][k] << " ";
				}
    		std::cout << std::endl;
				}
			std::cout << std::endl;
			}
			std::cout << std::endl;			

    // free the memory
    for(int i = 0; i < 3; i++){
        for(int  j = 0; j < 10; j++){
            delete [] x[i][j];              // delete 3rd dim first
        }
        delete [] x[i];                     // delete 2nd dim
    }
    delete [] x;                            // delete 1st dim
*/
int nodes = 20;
int k=3;
double Es1[k][nodes][nodes];
double Es2[k][nodes][nodes];


for(int k =0 ; k< 3 ;k++)
{
	for(int i = 0; i < nodes; i++)
	{
		for(int j = 0; j < nodes; j++){

			 Es1[k][i][j]  = 0.5;
			 
			 Es2[k][i][j]  = 0.255;
			
			}
	}

}

 for(int j = 0; j < nodes; j++)
				{
            for(int k = 0; k < nodes; k++)
				{						 
               std::cout << Es2[1][j][k] << " ";
				}
    		std::cout << std::endl;
				}
    return 0;
}

